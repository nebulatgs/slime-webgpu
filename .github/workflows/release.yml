name: Deploy
on:
  push:
    tags:
      - "v*"

env:
  CARGO_INCREMENTAL: 0

jobs:
  # Build sources for every OS
  github_build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: railway-x86_64-unknown-linux-gnu.tar.gz

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: railway-x86_64-unknown-linux-musl.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: railway-x86_64-apple-darwin.tar.gz

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: railway-x86_64-pc-windows-msvc.zip

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.3.5

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Setup | Cache Cargo
        uses: Swatinem/rust-cache@v1

      - name: Build | Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip slime-webgpu.exe
          7z a ../../../${{ matrix.name }} slime-webgpu.exe
          cd -
      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          # TODO: investigate better cross platform stripping
          strip slime-webgpu || true
          tar czvf ../../../${{ matrix.name }} slime-webgpu
          cd -
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
      - name: Build | Publish
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.name }}
          body_path: RELEASE.md